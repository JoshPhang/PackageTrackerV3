OOD Support Case #1 - Sorting and printing packages:
    In TextMenu.java, almost every single user option requires a list to be sorted and printed.
    To support this requirement in an object oriented design, I decided to make separate sorting and printing functions.
    These functions take in an array of Packages and sorts/prints it.
    This functionality follows polymorphism and reduces the amount of repeated code.

OOD Support Case #2 - Package creation:
    In order to create a new package, there are some requirements we need to check first to see what kind of package to create.
    This is simplified by creating a PackageFactory class that does all of the checking and class creation for us.
    Because of PackageFactory, a lot of the internal implementation is hidden for easy use.
    This follows abstraction because we are simplifying complicated problems and improving code readability.