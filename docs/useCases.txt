Use Case Option 1 (List all packages):
    Variation #1 (with list,json):
        1.1 The user will run the Package Deliveries Tracker program
        1.2 Packages will then be loaded from the included json file
        1.3 User will then be prompted for a response to a printed menu of options
        1.4 The user types "1" to list all the packages, then presses enter
        1.5 The program will then list all the packages stored, sorted by estimated delivery date
        1.6 The user then types "7", followed by enter to exit the program
        1.7 The program saves the stored packages to a json file then terminates itself after printing:
            "Thanks for using Parcel Pilot! Fly on by again soon!"

    Variation #2 (without list.json):
        2.1 The user will run the Package Deliveries Tracker program with no json file
        2.2 User will then be prompted for a response to a printed menu of options
        2.3 The user types "1" to list all the packages, then presses enter
        2.4 The program will print: "No packages to show."
        2.5 The user then types "7", followed by enter to exit the program
        2.6 The program saves the stored packages to a json file then terminates itself after printing:
            "Thanks for using Parcel Pilot! Fly on by again soon!"

Use Case Option 2 (Add a package):
    Variation #1 (book):
        1.1 The user will run the Package Deliveries Tracker program
        1.2 User will then be prompted for a response to a printed menu of options
        1.3 The user types "2" to add a package, then presses enter
        1.4 The program will then ask user for the type of the package
        1.5 The user then types "book", followed by enter
        1.6 The user fills out the package information prompted by the text menu
        1.7 The user then types "7", followed by enter to exit the program
        1.8 The program saves the stored packages to a json file then terminates itself after printing:
            "Thanks for using Parcel Pilot! Fly on by again soon!"

    Variation #2 (perishable):
        2.1 The user will run the Package Deliveries Tracker program
        2.2 User will then be prompted for a response to a printed menu of options
        2.3 The user types "2" to add a package, then presses enter
        2.4 The program will then ask user for the type of the package
        2.5 The user then types "perishable", followed by enter
        2.6 The user fills out the package information prompted by the text menu
        2.7 The user then types "7", followed by enter to exit the program
        2.8 The program saves the stored packages to a json file then terminates itself after printing:
            "Thanks for using Parcel Pilot! Fly on by again soon!"

    Variation #3 (electronic):
        3.1 The user will run the Package Deliveries Tracker program
        3.2 User will then be prompted for a response to a printed menu of options
        3.3 The user types "2" to add a package, then presses enter
        3.4 The program will then ask user for the type of the package
        3.5 The user then types "electronic", followed by enter
        3.6 The user fills out the package information prompted by the text menu
        3.7 The user then types "7", followed by enter to exit the program
        3.8 The program saves the stored packages to a json file then terminates itself after printing:
            "Thanks for using Parcel Pilot! Fly on by again soon!"

Use Case Option 3 (Remove a package):
    Variation #1 (with packages):
        1.1 The user will run the Package Deliveries Tracker program
        1.2 User will then be prompted for a response to a printed menu of options
        1.3 The user types "3" to delete a package, then presses enter
        1.4 The program will then list all the packages stored, sorted by estimated delivery date, along with a corresponding package number
        1.5 The user then enters the package number they want to remove, followed by enter
        1.6 The user then types "7", followed by enter to exit the program
        1.7 The program saves the remaining packages to a json file then terminates itself after printing:
            "Thanks for using Parcel Pilot! Fly on by again soon!"

    Variation #2 (without packages):
        2.1 The user will run the Package Deliveries Tracker program
        2.2 User will then be prompted for a response to a printed menu of options
        2.3 The user types "3" to delete a package, then presses enter
        2.4 The program will print: "No packages to show."
        2.5 The user then types "7", followed by enter to exit the program
        2.6 The program saves then terminates itself after printing:
            "Thanks for using Parcel Pilot! Fly on by again soon!"